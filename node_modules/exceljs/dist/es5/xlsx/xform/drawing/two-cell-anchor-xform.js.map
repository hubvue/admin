{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/two-cell-anchor-xform.js"],"names":["utils","require","colCache","BaseXform","StaticXform","CellPositionXform","PicXform","TwoCellAnchorXform","module","exports","map","tag","inherits","prepare","model","options","picture","range","decode","tl","col","left","row","top","br","right","bottom","render","xmlStream","editAs","openNode","closeNode","parseOpen","node","parser","name","reset","attributes","parseText","text","parseClose","undefined","reconcile","rId","rel","rels","match","Target","mediaId","mediaIndex","medium","media","Number","isInteger","encode"],"mappings":"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","file":"two-cell-anchor-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016-2017 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar colCache = require('../../../utils/col-cache');\r\nvar BaseXform = require('../base-xform');\r\nvar StaticXform = require('../static-xform');\r\n\r\nvar CellPositionXform = require('./cell-position-xform');\r\nvar PicXform = require('./pic-xform');\r\n\r\nvar TwoCellAnchorXform = module.exports = function() {\r\n  this.map = {\r\n    'xdr:from': new CellPositionXform({tag: 'xdr:from'}),\r\n    'xdr:to': new CellPositionXform({tag: 'xdr:to'}),\r\n    'xdr:pic': new PicXform(),\r\n    'xdr:clientData': new StaticXform({tag: 'xdr:clientData'}),\r\n  };\r\n};\r\n\r\nutils.inherits(TwoCellAnchorXform, BaseXform, {\r\n  get tag() { return 'xdr:twoCellAnchor'; },\r\n\r\n  prepare: function(model, options) {\r\n    this.map['xdr:pic'].prepare(model.picture, options);\r\n\r\n    // convert model.range into tl, br\r\n    if (typeof model.range === 'string') {\r\n      var range = colCache.decode(model.range);\r\n      // Note - zero based\r\n      model.tl = {\r\n        col: range.left - 1,\r\n        row: range.top - 1\r\n      };\r\n      // zero based but also +1 to cover to bottom right of br cell\r\n      model.br = {\r\n        col: range.right,\r\n        row: range.bottom\r\n      };\r\n    } else {\r\n      model.tl = model.range.tl;\r\n      model.br = model.range.br;\r\n    }\r\n  },\r\n\r\n  render: function(xmlStream, model) {\r\n    if (model.range.editAs) {\r\n      xmlStream.openNode(this.tag, {editAs: model.range.editAs});\r\n    } else {\r\n      xmlStream.openNode(this.tag);\r\n    }\r\n\r\n    this.map['xdr:from'].render(xmlStream, model.tl);\r\n    this.map['xdr:to'].render(xmlStream, model.br);\r\n    this.map['xdr:pic'].render(xmlStream, model.picture);\r\n    this.map['xdr:clientData'].render(xmlStream, {});\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case this.tag:\r\n        this.reset();\r\n        this.model = {\r\n          editAs: node.attributes.editAs\r\n        };\r\n        break;\r\n      default:\r\n        this.parser = this.map[node.name];\r\n        if (this.parser) {\r\n          this.parser.parseOpen(node);\r\n        }\r\n        break;\r\n    }\r\n    return true;\r\n  },\r\n\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case this.tag:\r\n        this.model = this.model || {};\r\n        this.model.tl = this.map['xdr:from'].model;\r\n        this.model.br = this.map['xdr:to'].model;\r\n        this.model.picture = this.map['xdr:pic'].model;\r\n        return false;\r\n      default:\r\n        // could be some unrecognised tags\r\n        return true;\r\n    }\r\n  },\r\n\r\n  reconcile: function(model, options) {\r\n    if (model.picture && model.picture.rId) {\r\n      var rel = options.rels[model.picture.rId];\r\n      var match = rel.Target.match(/.*\\/media\\/(.+[.][a-z]{3,4})/);\r\n      if (match) {\r\n        var name = match[1];\r\n        var mediaId = options.mediaIndex[name];\r\n        model.medium = options.media[mediaId];\r\n      }\r\n    }\r\n    if (model.tl && model.br && Number.isInteger(model.tl.row) && Number.isInteger(model.tl.col) && Number.isInteger(model.br.row) && Number.isInteger(model.br.col)) {\r\n      model.range = colCache.encode(model.tl.row + 1, model.tl.col + 1, model.br.row, model.br.col);\r\n    } else {\r\n      model.range = {\r\n        tl: model.tl,\r\n        br: model.br,\r\n      };\r\n    }\r\n    if (model.editAs) {\r\n      model.range.editAs = model.editAs;\r\n      delete model.editAs;\r\n    }\r\n    delete model.tl;\r\n    delete model.br;\r\n  }\r\n});\r\n"]}