{"version":3,"sources":["../../../../../lib/xlsx/xform/book/sheet-xform.js"],"names":["utils","require","BaseXform","WorksheetXform","module","exports","inherits","render","xmlStream","model","leafNode","sheetId","id","name","state","rId","parseOpen","node","xmlDecode","attributes","parseInt","parseText","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;;AAEA,IAAIE,iBAAiBC,OAAOC,OAAP,GAAiB,YAAW,CAChD,CADD;;AAGAL,MAAMM,QAAN,CAAeH,cAAf,EAA+BD,SAA/B,EAA0C;;AAExCK,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjCD,cAAUE,QAAV,CAAmB,OAAnB,EAA4B;AAC1BC,eAASF,MAAMG,EADW;AAE1BC,YAAMJ,MAAMI,IAFc;AAG1BC,aAAOL,MAAMK,KAHa;AAI1B,cAAQL,MAAMM;AAJY,KAA5B;AAMD,GATuC;;AAWxCC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAIA,KAAKJ,IAAL,KAAc,OAAlB,EAA2B;AACzB,WAAKJ,KAAL,GAAa;AACXI,cAAMb,MAAMkB,SAAN,CAAgBD,KAAKE,UAAL,CAAgBN,IAAhC,CADK;AAEXD,YAAIQ,SAASH,KAAKE,UAAL,CAAgBR,OAAzB,EAAkC,EAAlC,CAFO;AAGXG,eAAOG,KAAKE,UAAL,CAAgBL,KAHZ;AAIXC,aAAKE,KAAKE,UAAL,CAAgB,MAAhB;AAJM,OAAb;AAMA,aAAO,IAAP;AACD;AACD,WAAO,KAAP;AACD,GAtBuC;AAuBxCE,aAAW,qBAAW,CACrB,CAxBuC;AAyBxCC,cAAY,sBAAW;AACrB,WAAO,KAAP;AACD;AA3BuC,CAA1C","file":"sheet-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar WorksheetXform = module.exports = function() {\r\n};\r\n\r\nutils.inherits(WorksheetXform, BaseXform, {\r\n\r\n  render: function(xmlStream, model) {\r\n    xmlStream.leafNode('sheet', {\r\n      sheetId: model.id,\r\n      name: model.name,\r\n      state: model.state,\r\n      'r:id': model.rId\r\n    });\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (node.name === 'sheet') {\r\n      this.model = {\r\n        name: utils.xmlDecode(node.attributes.name),\r\n        id: parseInt(node.attributes.sheetId, 10),\r\n        state: node.attributes.state,\r\n        rId: node.attributes['r:id']\r\n      };\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  parseText: function() {\r\n  },\r\n  parseClose: function() {\r\n    return false;\r\n  }\r\n});\r\n"]}