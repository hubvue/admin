{"version":3,"sources":["../../../lib/doc/column.js"],"names":["_","require","Enums","colCache","Column","module","exports","worksheet","number","defn","_worksheet","_number","prototype","letter","n2l","isCustomWidth","width","undefined","header","_header","key","style","hidden","outlineLevel","value","_hidden","headers","Array","forEach","text","index","getCell","_key","column","getColumnKey","deleteColumnKey","setColumnKey","_outlineLevel","collapsed","properties","outlineLevelCol","toString","JSON","stringify","length","equivalentTo","other","isEqual","isDefault","s","font","numFmt","alignment","border","fill","headerCount","eachCell","options","iteratee","colNumber","eachRow","row","rowNumber","values","v","cell","type","ValueType","Null","offset","hasOwnProperty","_applyStyle","name","toModel","columns","cols","col","min","max","push","fromModel","count"],"mappings":"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","file":"column.js","sourcesContent":["/**\r\n * Copyright (c) 2014-2017 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar _ = require('../utils/under-dash');\r\n\r\nvar Enums = require('./enums');\r\nvar colCache = require('../utils/col-cache');\r\n// Column defines the column properties for 1 column.\r\n// This includes header rows, widths, key, (style), etc.\r\n// Worksheet will condense the columns as appropriate during serialization\r\nvar Column = module.exports = function(worksheet, number, defn) {\r\n  this._worksheet = worksheet;\r\n  this._number = number;\r\n  if (defn !== false) {\r\n    // sometimes defn will follow\r\n    this.defn = defn;\r\n  }\r\n};\r\n\r\nColumn.prototype = {\r\n  get number() {\r\n    return this._number;\r\n  },\r\n  get worksheet() {\r\n    return this._worksheet;\r\n  },\r\n  get letter() {\r\n    return colCache.n2l(this._number);\r\n  },\r\n  get isCustomWidth() {\r\n    return (this.width !== undefined) && (this.width !== 8);\r\n  },\r\n  get defn() {\r\n    return {\r\n      header: this._header,\r\n      key: this.key,\r\n      width: this.width,\r\n      style: this.style,\r\n      hidden: this.hidden,\r\n      outlineLevel: this.outlineLevel\r\n    };\r\n  },\r\n  set defn(value) {\r\n    if (value) {\r\n      this.key = value.key;\r\n      this.width = value.width;\r\n      this.outlineLevel = value.outlineLevel;\r\n      if (value.style) {\r\n        this.style = value.style;\r\n      } else {\r\n        this.style = {};\r\n      }\r\n\r\n      // headers must be set after style\r\n      this.header = value.header;\r\n      this._hidden = !!value.hidden;\r\n    } else {\r\n      delete this._header;\r\n      delete this.key;\r\n      delete this.width;\r\n      this.style = {};\r\n      this.outlineLevel = 0;\r\n    }\r\n  },\r\n  get headers() {\r\n    return this._header && (this._header instanceof Array) ?\r\n      this._header :\r\n      [this._header];\r\n  },\r\n  get header() {\r\n    return this._header;\r\n  },\r\n  set header(value) {\r\n    if (value !== undefined) {\r\n      this._header = value;\r\n      this.headers.forEach((text, index) => {\r\n        this._worksheet.getCell(index + 1, this.number).value = text;\r\n      });\r\n    } else {\r\n      this._header = undefined;\r\n    }\r\n  },\r\n  get key() {\r\n    return this._key;\r\n  },\r\n  set key(value) {\r\n    const column = this._key && this._worksheet.getColumnKey(this._key);\r\n    if (column === this) {\r\n      this._worksheet.deleteColumnKey(this._key);\r\n    }\r\n\r\n    this._key = value;\r\n    if (value) {\r\n      this._worksheet.setColumnKey(this._key, this);\r\n    }\r\n  },\r\n  get hidden() {\r\n    return !!this._hidden;\r\n  },\r\n  set hidden(value) {\r\n    this._hidden = value;\r\n  },\r\n  get outlineLevel() {\r\n    return this._outlineLevel || 0;\r\n  },\r\n  set outlineLevel(value) {\r\n    this._outlineLevel = value;\r\n  },\r\n  get collapsed() {\r\n    return !!(this._outlineLevel && (this._outlineLevel >= this._worksheet.properties.outlineLevelCol));\r\n  },\r\n\r\n  toString: function() {\r\n    return JSON.stringify({\r\n      key: this.key,\r\n      width: this.width,\r\n      headers: this.headers.length ? this.headers : undefined\r\n    });\r\n  },\r\n  equivalentTo: function(other) {\r\n    return (this.width === other.width) &&\r\n            (this.hidden === other.hidden) &&\r\n            (this.outlineLevel === other.outlineLevel) &&\r\n            _.isEqual(this.style, other.style);\r\n  },\r\n  get isDefault() {\r\n    if (this.isCustomWidth) {\r\n      return false;\r\n    }\r\n    if (this.hidden) {\r\n      return false;\r\n    }\r\n    if (this.outlineLevel) {\r\n      return false;\r\n    }\r\n    var s = this.style;\r\n    if (s && (s.font || s.numFmt || s.alignment || s.border || s.fill)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  get headerCount() {\r\n    return this.headers.length;\r\n  },\r\n\r\n  eachCell: function(options, iteratee) {\r\n    var colNumber = this.number;\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = null;\r\n    }\r\n    this._worksheet.eachRow(options, function(row, rowNumber) {\r\n      iteratee(row.getCell(colNumber), rowNumber);\r\n    });\r\n  },\r\n\r\n  get values() {\r\n    const v = [];\r\n    this.eachCell((cell, rowNumber) => {\r\n      if (cell && cell.type !== Enums.ValueType.Null) {\r\n        v[rowNumber] = cell.value;\r\n      }\r\n    });\r\n    return v;\r\n  },\r\n\r\n  set values(v) {\r\n    if (!v) {\r\n      return;\r\n    }\r\n    const colNumber = this.number;\r\n    let offset = 0;\r\n    if (v.hasOwnProperty('0')) {\r\n      // assume contiguous array, start at row 1\r\n      offset = 1;\r\n    }\r\n    v.forEach((value, index) => {\r\n      this._worksheet.getCell(index + offset, colNumber).value = value;\r\n    });\r\n  },\r\n\r\n  // =========================================================================\r\n  // styles\r\n  _applyStyle: function(name, value) {\r\n    this.style[name] = value;\r\n    this.eachCell(function(cell) {\r\n      cell[name] = value;\r\n    });\r\n    return value;\r\n  },\r\n\r\n  get numFmt() {\r\n    return this.style.numFmt;\r\n  },\r\n  set numFmt(value) {\r\n    this._applyStyle('numFmt', value);\r\n  },\r\n  get font() {\r\n    return this.style.font;\r\n  },\r\n  set font(value) {\r\n    this._applyStyle('font', value);\r\n  },\r\n  get alignment() {\r\n    return this.style.alignment;\r\n  },\r\n  set alignment(value) {\r\n    this._applyStyle('alignment', value);\r\n  },\r\n  get border() {\r\n    return this.style.border;\r\n  },\r\n  set border(value) {\r\n    this._applyStyle('border', value);\r\n  },\r\n  get fill() {\r\n    return this.style.fill;\r\n  },\r\n  set fill(value) {\r\n    this._applyStyle('fill', value);\r\n  }\r\n};\r\n\r\n// =============================================================================\r\n// static functions\r\n\r\nColumn.toModel = function(columns) {\r\n  // Convert array of Column into compressed list cols\r\n  var cols = [];\r\n  var col = null;\r\n  if (columns) {\r\n    columns.forEach(function(column, index) {\r\n      if (column.isDefault) {\r\n        if (col) {\r\n          col = null;\r\n        }\r\n      } else if (!col || !column.equivalentTo(col)) {\r\n        col = {\r\n          min: index + 1,\r\n          max: index + 1,\r\n          width: column.width,\r\n          style: column.style,\r\n          isCustomWidth: column.isCustomWidth,\r\n          hidden: column.hidden,\r\n          outlineLevel: column.outlineLevel,\r\n          collapsed: column.collapsed\r\n        };\r\n        cols.push(col);\r\n      } else {\r\n        col.max = index + 1;\r\n      }\r\n    });\r\n  }\r\n  return cols.length ? cols : undefined;\r\n};\r\n\r\nColumn.fromModel = function(worksheet, cols) {\r\n  cols = cols || [];\r\n  var columns = [];\r\n  var count = 1;\r\n  var index = 0;\r\n  while (index < cols.length) {\r\n    var col = cols[index++];\r\n    while (count < col.min) {\r\n      columns.push(new Column(worksheet, count++));\r\n    }\r\n    while (count <= col.max) {\r\n      columns.push(new Column(worksheet, count++, col));\r\n    }\r\n  }\r\n  return columns.length ? columns : null;\r\n};\r\n"]}